function rotatingMatrix = rotatingMatrixGenerator(axis, angle)
%angle in radius
    axisLength = sqrt(sum(axis.^2));
    normalizedAxis = axis./axisLength;
    rotatingMatrix = [cos(-angle) + normalizedAxis(:, 1, :).^2 .* (1-cos(-angle))...
                      normalizedAxis(:, 1, :) .* normalizedAxis(:, 2, :) .* (1-cos(-angle)) - normalizedAxis(:, 3, :) .* sin(-angle)...
                      normalizedAxis(:, 1, :) .* normalizedAxis(:, 3, :) .* (1-cos(-angle)) + normalizedAxis(:, 2, :) .* sin(-angle);...
                      normalizedAxis(:, 2, :) .* normalizedAxis(:, 1, :) .* (1-cos(-angle)) + normalizedAxis(:, 3, :) .* sin(-angle)...
                      cos(-angle) + normalizedAxis(:, 2, :).^2 .* (1-cos(-angle))...
                      normalizedAxis(:, 2, :) .* normalizedAxis(:, 3, :) .* (1-cos(-angle)) - normalizedAxis(:, 1, :) .* sin(-angle);...
                      normalizedAxis(:, 3, :) .* normalizedAxis(:, 1, :) .* (1-cos(-angle)) - normalizedAxis(:, 2, :) .* sin(-angle)...
                      normalizedAxis(:, 3, :) .* normalizedAxis(:, 2, :) .* (1-cos(-angle)) + normalizedAxis(:, 1, :) .* sin(-angle)...
                      cos(-angle) + normalizedAxis(:, 3, :).^2 .* (1-cos(-angle))];

end