function rotatingMatrix = rotatingMatrixGenerator(axis, angle)
%angle in radius
    axisLength = sqrt(sum(axis.^2));
    normalizedAxis = axis./axisLength;
    cosineMinusAngle = cos(-angle);
    sineMinusAngle = sin(-angle);
    rotatingMatrix = [cosineMinusAngle + normalizedAxis(:, 1, :).^2 .* (1-cosineMinusAngle)...
                      normalizedAxis(:, 1, :) .* normalizedAxis(:, 2, :) .* (1-cosineMinusAngle) - normalizedAxis(:, 3, :) .* sineMinusAngle...
                      normalizedAxis(:, 1, :) .* normalizedAxis(:, 3, :) .* (1-cosineMinusAngle) + normalizedAxis(:, 2, :) .* sineMinusAngle;...
                      normalizedAxis(:, 2, :) .* normalizedAxis(:, 1, :) .* (1-cosineMinusAngle) + normalizedAxis(:, 3, :) .* sineMinusAngle...
                      cosineMinusAngle + normalizedAxis(:, 2, :).^2 .* (1-cosineMinusAngle)...
                      normalizedAxis(:, 2, :) .* normalizedAxis(:, 3, :) .* (1-cosineMinusAngle) - normalizedAxis(:, 1, :) .* sineMinusAngle;...
                      normalizedAxis(:, 3, :) .* normalizedAxis(:, 1, :) .* (1-cosineMinusAngle) - normalizedAxis(:, 2, :) .* sineMinusAngle...
                      normalizedAxis(:, 3, :) .* normalizedAxis(:, 2, :) .* (1-cosineMinusAngle) + normalizedAxis(:, 1, :) .* sineMinusAngle...
                      cosineMinusAngle + normalizedAxis(:, 3, :).^2 .* (1-cosineMinusAngle)];

end